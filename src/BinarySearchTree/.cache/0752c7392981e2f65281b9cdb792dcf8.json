{"dependencies":[{"name":"./Node","loc":{"line":3,"column":21}},{"name":"./insertNode","loc":{"line":4,"column":27}},{"name":"./inOrderTraverseNode","loc":{"line":5,"column":36}},{"name":"./preOrderTraverseNode","loc":{"line":6,"column":37}},{"name":"./postOrderTraverseNode","loc":{"line":7,"column":38}}],"generated":{"js":"\"use strict\";\nexports.__esModule = true;\nvar Node_1 = require(\"./Node\");\nvar insertNode_1 = require(\"./insertNode\");\nvar inOrderTraverseNode_1 = require(\"./inOrderTraverseNode\");\nvar preOrderTraverseNode_1 = require(\"./preOrderTraverseNode\");\nvar postOrderTraverseNode_1 = require(\"./postOrderTraverseNode\");\nvar BinarySearchTree = /** @class */ (function () {\n    function BinarySearchTree() {\n        this.root = null;\n    }\n    BinarySearchTree.prototype.insert = function (key) {\n        var node = new Node_1[\"default\"](key);\n        if (this.root === null) {\n            this.root = node;\n        }\n        else {\n            insertNode_1[\"default\"](this.root, node);\n        }\n    };\n    BinarySearchTree.prototype.inOrderTraverse = function (callback) {\n        inOrderTraverseNode_1[\"default\"](this.root, callback);\n    };\n    BinarySearchTree.prototype.preOrderTraverse = function (callback) {\n        preOrderTraverseNode_1[\"default\"](this.root, callback);\n    };\n    BinarySearchTree.prototype.postOrderTraverse = function (callback) {\n        postOrderTraverseNode_1[\"default\"](this.root, callback);\n    };\n    return BinarySearchTree;\n}());\nvar tree = new BinarySearchTree();\ntree.insert(10);\ntree.insert(23);\ntree.insert(27);\ntree.insert(1);\ntree.insert(7);\ntree.insert(231);\nconsole.log('中序遍历');\ntree.inOrderTraverse(function (key) {\n    console.log(key);\n});\nconsole.log('先序遍历');\ntree.preOrderTraverse(function (key) {\n    console.log(key);\n});\nconsole.log('后序遍历');\ntree.postOrderTraverse(function (key) {\n    console.log(key);\n});\n// console.log(tree);\n"},"hash":"be9a2573a8877e56c424af89f077bc12"}